# Prometheus alerting rules for Goose Slackbot

groups:
  - name: goose_slackbot_alerts
    interval: 30s
    rules:
      # Application Health
      - alert: ApplicationDown
        expr: up{job="goose-slackbot-app"} == 0
        for: 1m
        labels:
          severity: critical
          component: app
        annotations:
          summary: "Goose Slackbot application is down"
          description: "The application {{ $labels.instance }} has been down for more than 1 minute."

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          component: app
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: SlowResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 5m
        labels:
          severity: warning
          component: app
        annotations:
          summary: "Slow response times detected"
          description: "95th percentile response time is {{ $value }}s on {{ $labels.instance }}"

      # Database
      - alert: DatabaseDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "PostgreSQL database is down"
          description: "Database {{ $labels.instance }} has been down for more than 1 minute."

      - alert: HighDatabaseConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "High database connection usage"
          description: "Database connections are at {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_statements_mean_time_seconds[5m]) > 1
        for: 5m
        labels:
          severity: warning
          component: database
        annotations:
          summary: "Slow database queries detected"
          description: "Average query time is {{ $value }}s on {{ $labels.instance }}"

      # Redis
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          component: cache
        annotations:
          summary: "Redis cache is down"
          description: "Redis {{ $labels.instance }} has been down for more than 1 minute."

      - alert: HighRedisMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          component: cache
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is at {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      # System Resources
      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: process_resident_memory_bytes / node_memory_MemTotal_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: DiskSpaceLow
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.1
        for: 5m
        labels:
          severity: warning
          component: system
        annotations:
          summary: "Low disk space"
          description: "Disk space is {{ $value | humanizePercentage }} available on {{ $labels.instance }}"

      # Application Specific
      - alert: HighQueryFailureRate
        expr: rate(goose_queries_failed_total[5m]) / rate(goose_queries_total[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          component: app
        annotations:
          summary: "High query failure rate"
          description: "Query failure rate is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: SlackAPIErrors
        expr: rate(slack_api_errors_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          component: app
        annotations:
          summary: "High Slack API error rate"
          description: "Slack API error rate is {{ $value }} errors/s on {{ $labels.instance }}"

      - alert: LongRunningQueries
        expr: goose_query_duration_seconds > 300
        for: 1m
        labels:
          severity: warning
          component: app
        annotations:
          summary: "Long running queries detected"
          description: "Query has been running for {{ $value }}s on {{ $labels.instance }}"

      # Pod/Container Health (Kubernetes)
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 5m
        labels:
          severity: critical
          component: kubernetes
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is crash looping"

      - alert: PodNotReady
        expr: kube_pod_status_phase{phase!="Running"} == 1
        for: 5m
        labels:
          severity: warning
          component: kubernetes
        annotations:
          summary: "Pod is not ready"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} is not in Running state"
