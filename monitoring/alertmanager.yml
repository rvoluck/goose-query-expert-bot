# AlertManager configuration for Goose Slackbot

global:
  resolve_timeout: 5m
  slack_api_url: 'YOUR_SLACK_WEBHOOK_URL'

# Templates
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'
  
  routes:
    # Critical alerts go to PagerDuty and Slack
    - match:
        severity: critical
      receiver: 'critical-alerts'
      continue: true
    
    # Warning alerts go to Slack only
    - match:
        severity: warning
      receiver: 'warning-alerts'
    
    # Database alerts
    - match:
        component: database
      receiver: 'database-alerts'
    
    # Application alerts
    - match:
        component: app
      receiver: 'app-alerts'

# Inhibition rules
inhibit_rules:
  # Inhibit warning if critical is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

# Receivers
receivers:
  # Default receiver
  - name: 'default'
    slack_configs:
      - channel: '#alerts'
        title: 'Goose Slackbot Alert'
        text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
        send_resolved: true

  # Critical alerts
  - name: 'critical-alerts'
    slack_configs:
      - channel: '#critical-alerts'
        title: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          *Component:* {{ .CommonLabels.component }}
          *Description:* {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
          *Details:* {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}
        send_resolved: true
        color: 'danger'
    
    # PagerDuty integration (optional)
    # pagerduty_configs:
    #   - service_key: 'YOUR_PAGERDUTY_SERVICE_KEY'
    #     description: '{{ .GroupLabels.alertname }}: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

  # Warning alerts
  - name: 'warning-alerts'
    slack_configs:
      - channel: '#alerts'
        title: '‚ö†Ô∏è WARNING: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          *Component:* {{ .CommonLabels.component }}
          *Description:* {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        send_resolved: true
        color: 'warning'

  # Database alerts
  - name: 'database-alerts'
    slack_configs:
      - channel: '#database-alerts'
        title: 'üóÑÔ∏è Database Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          *Description:* {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        send_resolved: true

  # Application alerts
  - name: 'app-alerts'
    slack_configs:
      - channel: '#app-alerts'
        title: 'üì± Application Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Alert:* {{ .GroupLabels.alertname }}
          *Severity:* {{ .CommonLabels.severity }}
          *Description:* {{ range .Alerts }}{{ .Annotations.description }}{{ end }}
        send_resolved: true

  # Email receiver (optional)
  # - name: 'email-alerts'
  #   email_configs:
  #     - to: 'alerts@example.com'
  #       from: 'alertmanager@example.com'
  #       smarthost: 'smtp.example.com:587'
  #       auth_username: 'alertmanager@example.com'
  #       auth_password: 'password'
  #       headers:
  #         Subject: 'Goose Slackbot Alert: {{ .GroupLabels.alertname }}'
